# -*- coding: utf-8 -*-
"""Embeddings.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S8zMnN72djZD9vXF7RRIUxhhbYNXfoMK

# Uso de modelos de embeddings de Hugging Face: Sentence Transformers

## Intalacion y carga de libreiras
"""

!pip install -U sentence-transformers

import pandas as pd
from sentence_transformers import SentenceTransformer, util

"""## Cargar dataset, el archivo csv con el que se va a trabajar

"""

df_avatar = pd.read_csv('/content/atla-episodes-scripts.csv')

df_avatar.head(10)

"""## Usar Sentences Transformer como prueba (No es necesario hacer esto)"""

sentences = ['este es el primer ejemplo', 'y este es el segundo ejemplo']
model = SentenceTransformer('sentence-transformers/all-MiniLM-L12-v2')
embeddings = model.encode(sentences)

embeddings.shape

"""## Aplicar los embeddings

Pasa todos los script del dialogo del csv a espacios vectoriales
"""

embeddings = model.encode(df_avatar['script'], batch_size=64, show_progress_bar=True)

"""# Guardar dataset con nueva columna llamada embeddings

embeddings: son los espacios vectoriales del dialogo
"""

df_avatar['embeddings'] = embeddings.tolist()

df_avatar

"""## Busqueda semantica vectorial"""

query_embedding = model.encode(['Hi!'])

df_avatar['similarity'] = df_avatar.embeddings.apply(lambda x : util.cos_sim(x, query_embedding[0] ))

df_avatar.head()

df_avatar.sort_values('similarity', ascending=False).head(10)